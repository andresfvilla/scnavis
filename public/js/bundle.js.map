{"version":3,"sources":["node_modules/browser-pack/_prelude.js","client/actions/AddCharacterActions.js","client/actions/CharacterActions.js","client/actions/CharacterListActions.js","client/actions/FooterActions.js","client/actions/HomeActions.js","client/actions/NavbarActions.js","client/actions/SignupActions.js","client/actions/StatsActions.js","client/actions/UserListActions.js","client/alt.js","client/components/AddCharacter.js","client/components/App.js","client/components/Character.js","client/components/CharacterList.js","client/components/Footer.js","client/components/Home.js","client/components/Navbar.js","client/components/NotFoundPage.js","client/components/Signup.js","client/components/Stats.js","client/components/UserList.js","client/main.js","client/routes.js","client/stores/AddCharacterStore.js","client/stores/CharacterListStore.js","client/stores/CharacterStore.js","client/stores/FooterStore.js","client/stores/HomeStore.js","client/stores/NavbarStore.js","client/stores/SignupStore.js","client/stores/StatsStore.js","client/stores/UserListStore.js","node_modules/deep-equal/index.js","node_modules/deep-equal/lib/is_arguments.js","node_modules/deep-equal/lib/keys.js","node_modules/history/lib/Actions.js","node_modules/history/lib/AsyncUtils.js","node_modules/history/lib/DOMStateStorage.js","node_modules/history/lib/DOMUtils.js","node_modules/history/lib/ExecutionEnvironment.js","node_modules/history/lib/createBrowserHistory.js","node_modules/history/lib/createDOMHistory.js","node_modules/history/lib/createHistory.js","node_modules/history/lib/createLocation.js","node_modules/history/lib/deprecate.js","node_modules/history/lib/extractPath.js","node_modules/history/lib/parsePath.js","node_modules/history/lib/runTransitionHook.js","node_modules/invariant/browser.js","node_modules/process/browser.js","node_modules/warning/browser.js"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/EA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import alt from '../alt';\n\nclass AddCharacterActions {\n  constructor() {\n    this.generateActions(\n      'addCharacterSuccess',\n      'addCharacterFail',\n      'updateName',\n      'updateGender',\n      'invalidName',\n      'invalidGender'\n    );\n  }\n\n  addCharacter(name, gender) {\n    $.ajax({\n      type: 'POST',\n      url: '/api/characters',\n      data: { name: name, gender: gender }\n    })\n      .done((data) => {\n        this.actions.addCharacterSuccess(data.message);\n      })\n      .fail((jqXhr) => {\n        this.actions.addCharacterFail(jqXhr.responseJSON.message);\n      });\n  }\n}\n\nexport default alt.createActions(AddCharacterActions);\n","import alt from '../alt';\n\nclass CharacterActions {\n  constructor() {\n    this.generateActions(\n      'reportSuccess',\n      'reportFail',\n      'getCharacterSuccess',\n      'getCharacterFail'\n    );\n  }\n\n  getCharacter(characterId) {\n    $.ajax({ url: '/api/characters/' + characterId })\n      .done((data) => {\n        this.actions.getCharacterSuccess(data);\n      })\n      .fail((jqXhr) => {\n        this.actions.getCharacterFail(jqXhr);\n      });\n  }\n\n  report(characterId) {\n    $.ajax({\n      type: 'POST',\n      url: '/api/report',\n      data: { characterId: characterId }\n    })\n      .done(() => {\n        this.actions.reportSuccess();\n      })\n      .fail((jqXhr) => {\n        this.actions.reportFail(jqXhr);\n      });\n  }\n}\n\nexport default alt.createActions(CharacterActions);\n","import alt from '../alt';\n\nclass CharacterListActions {\n  constructor() {\n    this.generateActions(\n      'getCharactersSuccess',\n      'getCharactersFail'\n    );\n  }\n\n  getCharacters(payload) {\n    let url = '/api/characters/top';\n    let params = {\n      race: payload.race,\n      bloodline: payload.bloodline\n    };\n\n    if (payload.category === 'female') {\n      params.gender = 'female';\n    } else if (payload.category === 'male') {\n      params.gender = 'male';\n    }\n\n    if (payload.category === 'shame') {\n      url = '/api/characters/shame';\n    }\n\n    $.ajax({ url: url, data: params })\n      .done((data) => {\n        this.actions.getCharactersSuccess(data);\n      })\n      .fail((jqXhr) => {\n        this.actions.getCharactersFail(jqXhr);\n      });\n  }\n}\n\nexport default alt.createActions(CharacterListActions);\n","import alt from '../alt';\n\nclass FooterActions {\n  constructor() {\n    this.generateActions(\n      'getTopCharactersSuccess',\n      'getTopCharactersFail'\n    );\n  }\n\n  getTopCharacters() {\n    $.ajax({ url: '/api/characters/top' })\n      .done((data) => {\n        this.actions.getTopCharactersSuccess(data)\n      })\n      .fail((jqXhr) => {\n        this.actions.getTopCharactersFail(jqXhr)\n      });\n  }\n}\n\nexport default alt.createActions(FooterActions);\n","import alt from '../alt';\n\nclass HomeActions {\n  constructor() {\n    this.generateActions(\n      'getTwoCharactersSuccess',\n      'getTwoCharactersFail',\n      'voteFail'\n    );\n  }\n\n  getTwoCharacters() {\n    $.ajax({ url: '/api/characters' })\n      .done(data => {\n        this.actions.getTwoCharactersSuccess(data);\n      })\n      .fail(jqXhr => {\n        this.actions.getTwoCharactersFail(jqXhr.responseJSON.message);\n      });\n  }\n\n  vote(winner, loser) {\n    $.ajax({\n      type: 'PUT',\n      url: '/api/characters' ,\n      data: { winner: winner, loser: loser }\n    })\n      .done(() => {\n        this.actions.getTwoCharacters();\n      })\n      .fail((jqXhr) => {\n        this.actions.voteFail(jqXhr.responseJSON.message);\n      });\n  }\n}\n\nexport default alt.createActions(HomeActions);\n","import alt from '../alt';\nimport {assign} from 'underscore';\n\nclass NavbarActions {\n  constructor() {\n    this.generateActions(\n      'updateOnlineUsers',\n      'updateAjaxAnimation',\n      'updateSearchQuery',\n      'getCharacterCountSuccess',\n      'getCharacterCountFail',\n      'findCharacterSuccess',\n      'findCharacterFail'\n    );\n  }\n\n  findCharacter(payload) {\n    $.ajax({\n      url: '/api/characters/search',\n      data: { name: payload.searchQuery }\n    })\n      .done((data) => {\n        assign(payload, data);\n        this.actions.findCharacterSuccess(payload);\n      })\n      .fail(() => {\n        this.actions.findCharacterFail(payload);\n      });\n  }\n\n  getCharacterCount() {\n    $.ajax({ url: '/api/characters/count' })\n      .done((data) => {\n        this.actions.getCharacterCountSuccess(data)\n      })\n      .fail((jqXhr) => {\n        this.actions.getCharacterCountFail(jqXhr)\n      });\n  }\n}\n\nexport default alt.createActions(NavbarActions);\n","import alt from '../alt';\n\nclass SignupActions {\n  constructor() {\n    this.generateActions(\n      'signupSuccess',\n      'signupFail',\n      'updateDisplayName',\n      'updatePassword',\n      'updateEmail',\n      'invalidDisplayName',\n      'invalidPassword',\n      'invalidEmail',\n    );\n  }\n\n  addUser(email, displayName, password) {\n    $.ajax({\n      type: 'POST',\n      url: '/api/signup',\n      data: { email: email, displayName:displayName, password: password}\n    })\n      .done((data) => {\n        this.actions.signupSuccess(data.message);\n      })\n      .fail((jqXhr) => {\n        this.actions.signupFail(jqXhr.responseJSON.message);\n      });\n  }\n}\n\nexport default alt.createActions(SignupActions);\n","import alt from '../alt';\n\nclass StatsActions {\n  constructor() {\n    this.generateActions(\n      'getStatsSuccess',\n      'getStatsFail'\n    );\n  }\n\n  getStats() {\n    $.ajax({ url: '/api/stats' })\n      .done((data) => {\n        this.actions.getStatsSuccess(data);\n      })\n      .fail((jqXhr) => {\n        this.actions.getStatsFail(jqXhr);\n      });\n  }\n}\n\nexport default alt.createActions(StatsActions);\n","import alt from '../alt';\n\nclass UserListActions {\n  constructor() {\n    this.generateActions(\n      'getUsersSuccess',\n      'getUsersFail'\n    );\n  }\n\n  getUsers(payload) {\n    let url = '/api/users';\n    let params = {\n    };\n    $.ajax({ url: url, data: params })\n      .done((data) => {\n        this.actions.getUsersSuccess(data);\n      })\n      .fail((jqXhr) => {\n        this.actions.getUsersFail(jqXhr);\n      });\n  }\n}\n\nexport default alt.createActions(UserListActions);\n","import Alt from 'alt';\n\nexport default new Alt();\n","import React from 'react';\nimport AddCharacterStore from '../stores/AddCharacterStore';\nimport AddCharacterActions from '../actions/AddCharacterActions';\n\nclass AddCharacter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = AddCharacterStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    AddCharacterStore.listen(this.onChange);\n  }\n\n  componentWillUnmount() {\n    AddCharacterStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    var name = this.state.name.trim();\n    var gender = this.state.gender;\n\n    if (!name) {\n      AddCharacterActions.invalidName();\n      this.refs.nameTextField.getDOMNode().focus();\n    }\n\n    if (!gender) {\n      AddCharacterActions.invalidGender();\n    }\n\n    if (name && gender) {\n      AddCharacterActions.addCharacter(name, gender);\n    }\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='row flipInX animated'>\n          <div className='col-sm-8'>\n            <div className='panel panel-default'>\n              <div className='panel-heading'>Add Character</div>\n              <div className='panel-body'>\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                  <div className={'form-group ' + this.state.nameValidationState}>\n                    <label className='control-label'>Character Name</label>\n                    <input type='text' className='form-control' ref='nameTextField' value={this.state.name}\n                           onChange={AddCharacterActions.updateName} autoFocus/>\n                    <span className='help-block'>{this.state.helpBlock}</span>\n                  </div>\n                  <div className={'form-group ' + this.state.genderValidationState}>\n                    <div className='radio radio-inline'>\n                      <input type='radio' name='gender' id='female' value='Female' checked={this.state.gender === 'Female'}\n                             onChange={AddCharacterActions.updateGender}/>\n                      <label htmlFor='female'>Female</label>\n                    </div>\n                    <div className='radio radio-inline'>\n                      <input type='radio' name='gender' id='male' value='Male' checked={this.state.gender === 'Male'}\n                             onChange={AddCharacterActions.updateGender}/>\n                      <label htmlFor='male'>Male</label>\n                    </div>\n                  </div>\n                  <button type='submit' className='btn btn-primary'>Submit</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddCharacter;\n","import React from 'react';\nimport Footer from './Footer';\nimport Navbar from './Navbar';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Navbar history={this.props.history} />\n        {this.props.children}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport CharacterStore from '../stores/CharacterStore';\nimport CharacterActions from '../actions/CharacterActions'\n\nclass Character extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = CharacterStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    CharacterStore.listen(this.onChange);\n    CharacterActions.getCharacter(this.props.params.id);\n\n    $('.magnific-popup').magnificPopup({\n      type: 'image',\n      mainClass: 'mfp-zoom-in',\n      closeOnContentClick: true,\n      midClick: true,\n      zoom: {\n        enabled: true,\n        duration: 300\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    CharacterStore.unlisten(this.onChange);\n    $(document.body).removeClass();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Fetch new charachter data when URL path changes\n    if (prevProps.params.id !== this.props.params.id) {\n      CharacterActions.getCharacter(this.props.params.id);\n    }\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='profile-img'>\n          <a className='magnific-popup' href={'https://image.eveonline.com/Character/' + this.state.characterId + '_1024.jpg'}>\n            <img src={'https://image.eveonline.com/Character/' + this.state.characterId + '_256.jpg'} />\n          </a>\n        </div>\n        <div className='profile-info clearfix'>\n          <h2><strong>{this.state.name}</strong></h2>\n          <h4 className='lead'>Race: <strong>{this.state.race}</strong></h4>\n          <h4 className='lead'>Bloodline: <strong>{this.state.bloodline}</strong></h4>\n          <h4 className='lead'>Gender: <strong>{this.state.gender}</strong></h4>\n          <button className='btn btn-transparent'\n                  onClick={CharacterActions.report.bind(this, this.state.characterId)}\n                  disabled={this.state.isReported}>\n            {this.state.isReported ? 'Reported' : 'Report Character'}\n          </button>\n        </div>\n        <div className='profile-stats clearfix'>\n          <ul>\n            <li><span className='stats-number'>{this.state.winLossRatio}</span>Winning Percentage</li>\n            <li><span className='stats-number'>{this.state.wins}</span> Wins</li>\n            <li><span className='stats-number'>{this.state.losses}</span> Losses</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Character;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport CharacterListStore from '../stores/CharacterListStore';\nimport CharacterListActions from '../actions/CharacterListActions';\n\nclass CharacterList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = CharacterListStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    CharacterListStore.listen(this.onChange);\n    CharacterListActions.getCharacters(this.props.params);\n  }\n\n  componentWillUnmount() {\n    CharacterListStore.unlisten(this.onChange);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(prevProps.params, this.props.params)) {\n      CharacterListActions.getCharacters(this.props.params);\n    }\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    let charactersList = this.state.characters.map((character, index) => {\n      return (\n        <div key={character.characterId} className='list-group-item animated fadeIn'>\n          <div className='media'>\n            <span className='position pull-left'>{index + 1}</span>\n            <div className='pull-left thumb-lg'>\n              <Link to={'/characters/' + character.characterId}>\n                <img className='media-object' src={'http://image.eveonline.com/Character/' + character.characterId + '_128.jpg'} />\n              </Link>\n            </div>\n            <div className='media-body'>\n              <h4 className='media-heading'>\n                <Link to={'/characters/' + character.characterId}>{character.name}</Link>\n              </h4>\n              <small>Race: <strong>{character.race}</strong></small>\n              <br />\n              <small>Bloodline: <strong>{character.bloodline}</strong></small>\n              <br />\n              <small>Wins: <strong>{character.wins}</strong> Losses: <strong>{character.losses}</strong></small>\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className='container'>\n        <div className='list-group'>\n          {charactersList}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CharacterList;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport FooterStore from '../stores/FooterStore'\nimport FooterActions from '../actions/FooterActions';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = FooterStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    FooterStore.listen(this.onChange);\n    FooterActions.getTopCharacters();\n  }\n\n  componentWillUnmount() {\n    FooterStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    let leaderboardCharacters = this.state.characters.map((character) => {\n      return (\n        <li key={character.characterId}>\n          <Link to={'/characters/' + character.characterId}>\n            <img className='thumb-md' src={'http://image.eveonline.com/Character/' + character.characterId + '_128.jpg'} />\n          </Link>\n        </li>\n      )\n    });\n\n    return (\n      <footer>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-sm-5'>\n              <h3 className='lead'><strong>Information</strong> and <strong>Copyright</strong></h3>\n              <p>Powered by <strong>Node.js</strong>, <strong>MongoDB</strong> and <strong>React</strong> with Flux architecture and server-side rendering.</p>\n              <p>You may view the <a href='https://github.com/sahat/newedenfaces-react'>Source Code</a> behind this project on GitHub.</p>\n              <p>© 2015 Sahat Yalkabov.</p>\n            </div>\n            <div className='col-sm-7 hidden-xs'>\n              <h3 className='lead'><strong>Leaderboard</strong> Top 5 Characters</h3>\n              <ul className='list-inline'>\n                {leaderboardCharacters}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport HomeStore from '../stores/HomeStore'\nimport HomeActions from '../actions/HomeActions';\nimport {first, without, findWhere} from 'underscore';\n\nclass Home extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = HomeStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    HomeStore.listen(this.onChange);\n    HomeActions.getTwoCharacters();\n  }\n\n  componentWillUnmount() {\n    HomeStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleClick(character) {\n    var winner = character.characterId;\n    var loser = first(without(this.state.characters, findWhere(this.state.characters, { characterId: winner }))).characterId;\n    HomeActions.vote(winner, loser);\n  }\n\n  render() {\n    var characterNodes = this.state.characters.map((character, index) => {\n      return (\n        <div key={character.characterId} className={index === 0 ? 'col-xs-6 col-sm-6 col-md-5 col-md-offset-1' : 'col-xs-6 col-sm-6 col-md-5'}>\n          <div className='thumbnail fadeInUp animated'>\n            <img onClick={this.handleClick.bind(this, character)} src={'http://image.eveonline.com/Character/' + character.characterId + '_512.jpg'}/>\n            <div className='caption text-center'>\n              <ul className='list-inline'>\n                <li><strong>Race:</strong> {character.race}</li>\n                <li><strong>Bloodline:</strong> {character.bloodline}</li>\n              </ul>\n              <h4>\n                <Link to={'/characters/' + character.characterId}><strong>{character.name}</strong></Link>\n              </h4>\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className='container'>\n        <h3 className='text-center'>Click on the portrait. Select your favorite.</h3>\n        <div className='row'>\n          {characterNodes}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport NavbarStore from '../stores/NavbarStore';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = NavbarStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    NavbarStore.listen(this.onChange);\n    NavbarActions.getCharacterCount();\n\n    let socket = io.connect();\n\n    socket.on('onlineUsers', (data) => {\n      NavbarActions.updateOnlineUsers(data);\n    });\n\n    $(document).ajaxStart(() => {\n      NavbarActions.updateAjaxAnimation('fadeIn');\n    });\n\n    $(document).ajaxComplete(() => {\n      setTimeout(() => {\n        NavbarActions.updateAjaxAnimation('fadeOut');\n      }, 750);\n    });\n  }\n\n  componentWillUnmount() {\n    NavbarStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    let searchQuery = this.state.searchQuery.trim();\n\n    if (searchQuery) {\n      NavbarActions.findCharacter({\n        searchQuery: searchQuery,\n        searchForm: this.refs.searchForm,\n        history: this.props.history\n      });\n    }\n  }\n\n  render() {\n    return (\n      <nav className='navbar navbar-default navbar-static-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button type='button' className='navbar-toggle collapsed' data-toggle='collapse' data-target='#navbar'>\n            <span className='sr-only'>Toggle navigation</span>\n            <span className='icon-bar'></span>\n            <span className='icon-bar'></span>\n            <span className='icon-bar'></span>\n          </button>\n          <Link to='/' className='navbar-brand'>\n            <span className={'triangles animated ' + this.state.ajaxAnimationClass}>\n              <div className='tri invert'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n            </span>\n            SCNAVIS\n            <span className='badge badge-up badge-danger'>{this.state.onlineUsers}</span>\n          </Link>\n        </div>\n        <div id='navbar' className='navbar-collapse collapse'>\n          <form ref='searchForm' className='navbar-form navbar-left animated' onSubmit={this.handleSubmit.bind(this)}>\n            <div className='input-group'>\n              <input type='text' className='form-control' placeholder={this.state.totalCharacters + ' characters'} value={this.state.searchQuery} onChange={NavbarActions.updateSearchQuery} />\n              <span className='input-group-btn'>\n                <button className='btn btn-default' onClick={this.handleSubmit.bind(this)}><span className='glyphicon glyphicon-search'></span></button>\n              </span>\n            </div>\n          </form>\n          <ul className='nav navbar-nav'>\n            <li><Link to='/'>Home</Link></li>\n            <li><Link to='/users'>Users</Link></li>\n          </ul>\n          <ul className='nav navbar-nav' style={{\"float\": \"right\"}}>\n            <li><Link to='/login'>Login</Link></li>\n            <li><Link to='/signup'>Signup</Link></li>\n          </ul>\n        </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","// src/components/NotFoundPage.js\nimport React from 'react';\nimport { Link } from 'react-router';\n\nexport default class NotFoundPage extends React.Component {\n  render() {\n    return (\n      <div className=\"not-found container text-center\">\n        <h1>404</h1>\n        <h2>Page not found!</h2>\n        <p>\n          <Link to=\"/\">Go back to the main page</Link>\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport SignupStore from '../stores/SignupStore';\nimport SignupActions from '../actions/SignupActions';\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = SignupStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    SignupStore.listen(this.onChange);\n  }\n\n  componentWillUnmount() {\n    SignupStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    var email = this.state.email.trim();\n    var displayName = this.state.displayName.trim();\n    var password = this.state.password.trim();\n\n    if (!email || !displayName || !password) {\n      SignupActions.invalidSignup();\n      //this.refs.nameTextField.getDOMNode().focus();\n    }\n\n    if (email && displayName && password) {\n      SignupActions.addUser(email, displayName, password);\n    }\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='row flipInX animated'>\n          <div className='col-sm-8'>\n            <div className='panel panel-default'>\n              <div className='panel-heading'>Signup</div>\n              <div className='panel-body'>\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                  <div className={'form-group ' + this.state.emailValidationState}>\n                    <label className='control-label'>Email</label>\n                    <input type='text' className='form-control' ref='emailTextField' value={this.state.email}\n                           onChange={SignupActions.updateEmail} autoFocus/>\n                    <span className='help-block'>{this.state.helpBlock}</span>\n                  </div>\n                  <div className={'form-group ' + this.state.displayNameValidationState}>\n                    <label className='control-label'>Display Name (This will be the name that is displayed on SCNAVIS)</label>\n                    <input type='text' className='form-control' ref='displayNameTextField' value={this.state.displayName}\n                           onChange={SignupActions.updateDisplayName} autoFocus/>\n                    <span className='help-block'>{this.state.helpBlock}</span>\n                  </div>\n                  <div className={'form-group ' + this.state.passwordValidationState}>\n                    <label className='control-label'>Password</label>\n                    <input type='password' className='form-control' ref='passwordTextField' value={this.state.password}\n                           onChange={SignupActions.updatePassword} autoFocus/>\n                    <span className='help-block'>{this.state.helpBlock}</span>\n                  </div>\n                  <button type='submit' className='btn btn-primary'>Submit</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport StatsStore from '../stores/StatsStore'\nimport StatsActions from '../actions/StatsActions';\n\nclass Stats extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = StatsStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    StatsStore.listen(this.onChange);\n    StatsActions.getStats();\n  }\n\n  componentWillUnmount() {\n    StatsStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='panel panel-default'>\n          <table className='table table-striped'>\n            <thead>\n            <tr>\n              <th colSpan='2'>Stats</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>Leading race in Top 100</td>\n              <td>{this.state.leadingRace.race} with {this.state.leadingRace.count} characters</td>\n            </tr>\n            <tr>\n              <td>Leading bloodline in Top 100</td>\n              <td>{this.state.leadingBloodline.bloodline} with {this.state.leadingBloodline.count} characters\n              </td>\n            </tr>\n            <tr>\n              <td>Amarr Characters</td>\n              <td>{this.state.amarrCount}</td>\n            </tr>\n            <tr>\n              <td>Caldari Characters</td>\n              <td>{this.state.caldariCount}</td>\n            </tr>\n            <tr>\n              <td>Gallente Characters</td>\n              <td>{this.state.gallenteCount}</td>\n            </tr>\n            <tr>\n              <td>Minmatar Characters</td>\n              <td>{this.state.minmatarCount}</td>\n            </tr>\n            <tr>\n              <td>Total votes cast</td>\n              <td>{this.state.totalVotes}</td>\n            </tr>\n            <tr>\n              <td>Female characters</td>\n              <td>{this.state.femaleCount}</td>\n            </tr>\n            <tr>\n              <td>Male characters</td>\n              <td>{this.state.maleCount}</td>\n            </tr>\n            <tr>\n              <td>Total number of characters</td>\n              <td>{this.state.totalCount}</td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stats;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport UserListStore from '../stores/UserListStore';\nimport UserListActions from '../actions/UserListActions';\n\nclass UserList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = UserListStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n    componentDidMount() {\n    UserListStore.listen(this.onChange);\n    UserListActions.getUsers(this.props.params);\n  }\n\n  componentWillUnmount() {\n    UserListStore.unlisten(this.onChange);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(prevProps.params, this.props.params)) {\n      UserListActions.getUsers(this.props.params);\n    }\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    let usersList = this.state.users.map((user, index) => {\n      return (\n        <div key={user.local.displayName} className='list-group-item animated fadeIn'>\n          <div className='media'>\n            <span className='position pull-left'>{index + 1}</span>\n            <div className='pull-left thumb-lg'>\n              <Link to={'/users/' + user._id}>\n                <img className='media-object' src={'http://image.eveonline.com/Character/' + 'test_128.jpg'} />\n              </Link>\n            </div>\n            <div className='media-body'>\n              <h4 className='media-heading'>\n                <Link to={'/users/' + user.local.displayName}>{user.local.displayName}</Link>\n              </h4>\n              <br />\n              <small>Teams: <strong>{user.local.teams}</strong></small>\n              <br />\n              <small>Organizations: <strong>{user.local.organizations}</strong></small>\n              <br />\n              <small>Wins: <strong>{user.local.wins}</strong> Losses: <strong>{user.local.losses}</strong></small>\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className='container'>\n        <div className='list-group'>\n          {usersList}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserList;\n","import React from 'react';\nimport Router from 'react-router';\nimport ReactDOM from 'react-dom';\nimport createBrowserHistory from 'history/lib/createBrowserHistory';\nimport routes from './routes';\nimport Navbar from './components/Navbar';\n\nlet history = createBrowserHistory();\n\nReactDOM.render(<Router history={history}>{routes}</Router>, document.getElementById('app'));\n","import React from 'react';\nimport {Route} from 'react-router';\nimport App from './components/App';\nimport Home from './components/Home';\nimport Stats from './components/Stats';\nimport Character from './components/Character';\nimport CharacterList from './components/CharacterList';\nimport UserList from './components/UserList';\nimport AddCharacter from './components/AddCharacter';\nimport Signup from './components/Signup'\nimport NotFoundPage from './components/NotFoundPage';\n\nexport default (\n  <Route component={App}>\n    <Route path='/' component={Home} />\n    <Route path='/stats' component={Stats} />\n    <Route path='/shame' component={CharacterList} />\n    <Route path='/characters/:id' component={Character} />\n    <Route path='/users' component={UserList} />\n    <Route path='/add' component={AddCharacter} />\n    <Route path='/signup' component={Signup} />\n    <Route path=\"*\" component={NotFoundPage}/>\n  </Route>\n);\n","import alt from '../alt';\nimport AddCharacterActions from '../actions/AddCharacterActions';\n\nclass AddCharacterStore {\n  constructor() {\n    this.bindActions(AddCharacterActions);\n    this.name = '';\n    this.gender = '';\n    this.helpBlock = '';\n    this.nameValidationState = '';\n    this.genderValidationState = '';\n  }\n\n  onAddCharacterSuccess(successMessage) {\n    this.nameValidationState = 'has-success';\n    this.helpBlock = successMessage;\n  }\n\n  onAddCharacterFail(errorMessage) {\n    this.nameValidationState = 'has-error';\n    this.helpBlock = errorMessage;\n  }\n\n  onUpdateName(event) {\n    this.name = event.target.value;\n    this.nameValidationState = '';\n    this.helpBlock = '';\n  }\n\n  onUpdateGender(event) {\n    this.gender = event.target.value;\n    this.genderValidationState = '';\n  }\n\n  onInvalidName() {\n    this.nameValidationState = 'has-error';\n    this.helpBlock = 'Please enter a character name.';\n  }\n\n  onInvalidGender() {\n    this.genderValidationState = 'has-error';\n  }\n}\n\nexport default alt.createStore(AddCharacterStore);\n","import alt from '../alt';\nimport CharacterListActions from '../actions/CharacterListActions';\n\nclass CharacterListStore {\n  constructor() {\n    this.bindActions(CharacterListActions);\n    this.characters = [];\n  }\n\n  onGetCharactersSuccess(data) {\n    this.characters = data;\n  }\n\n  onGetCharactersFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(CharacterListStore);\n","import {assign, contains} from 'underscore';\nimport alt from '../alt';\nimport CharacterActions from '../actions/CharacterActions';\n\nclass CharacterStore {\n  constructor() {\n    this.bindActions(CharacterActions);\n    this.characterId = 0;\n    this.name = 'TBD';\n    this.race = 'TBD';\n    this.bloodline = 'TBD';\n    this.gender = 'TBD';\n    this.wins = 0;\n    this.losses = 0;\n    this.winLossRatio = 0;\n    this.isReported = false;\n  }\n\n  onGetCharacterSuccess(data) {\n    assign(this, data);\n    $(document.body).attr('class', 'profile ' + this.race.toLowerCase());\n    let localData = localStorage.getItem('NEF') ? JSON.parse(localStorage.getItem('NEF')) : {};\n    let reports = localData.reports || [];\n    this.isReported = contains(reports, this.characterId);\n    // If is NaN (from division by zero) then set it to \"0\"\n    this.winLossRatio = ((this.wins / (this.wins + this.losses) * 100) || 0).toFixed(1);\n  }\n\n  onGetCharacterFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onReportSuccess() {\n    this.isReported = true;\n    let localData = localStorage.getItem('NEF') ? JSON.parse(localStorage.getItem('NEF')) : {};\n    localData.reports = localData.reports || [];\n    localData.reports.push(this.characterId);\n    localStorage.setItem('NEF', JSON.stringify(localData));\n    toastr.warning('Character has been reported.');\n  }\n\n  onReportFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(CharacterStore);\n","import alt from '../alt';\nimport FooterActions from '../actions/FooterActions';\n\nclass FooterStore {\n  constructor() {\n    this.bindActions(FooterActions);\n    this.characters = [];\n  }\n\n  onGetTopCharactersSuccess(data) {\n    this.characters = data.slice(0, 5);\n  }\n\n  onGetTopCharactersFail(jqXhr) {\n    // Handle multiple response formats, fallback to HTTP status code number.\n    toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\n  }\n}\n\nexport default alt.createStore(FooterStore);\n","import alt from '../alt';\nimport HomeActions from '../actions/HomeActions';\n\nclass HomeStore {\n  constructor() {\n    this.bindActions(HomeActions);\n    this.characters = [];\n  }\n\n  onGetTwoCharactersSuccess(data) {\n    this.characters = data;\n  }\n\n  onGetTwoCharactersFail(errorMessage) {\n    toastr.error(errorMessage);\n  }\n\n  onVoteFail(errorMessage) {\n    toastr.error(errorMessage);\n  }\n}\n\nexport default alt.createStore(HomeStore);\n","import alt from '../alt';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass NavbarStore {\n  constructor() {\n    this.bindActions(NavbarActions);\n    this.totalCharacters = 0;\n    this.onlineUsers = 0;\n    this.searchQuery = '';\n    this.ajaxAnimationClass = '';\n  }\n\n  onFindCharacterSuccess(payload) {\n    payload.history.pushState(null, '/characters/' + payload.characterId);\n  }\n\n  onFindCharacterFail(payload) {\n    payload.searchForm.classList.add('shake');\n    setTimeout(() => {\n      payload.searchForm.classList.remove('shake');\n    }, 1000);\n  }\n\n  onUpdateOnlineUsers(data) {\n    this.onlineUsers = data.onlineUsers;\n  }\n\n  onUpdateAjaxAnimation(className) {\n    this.ajaxAnimationClass = className; //fadein or fadeout\n  }\n\n  onUpdateSearchQuery(event) {\n    this.searchQuery = event.target.value;\n  }\n\n  onGetCharacterCountSuccess(data) {\n    this.totalCharacters = data.count;\n  }\n\n  onGetCharacterCountFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(NavbarStore);\n","import alt from '../alt';\nimport SignupActions from '../actions/SignupActions';\n\nclass SignupStore {\n  constructor() {\n    this.bindActions(SignupActions);\n    this.email = '';\n    this.displayName = '';\n    this.password = '';\n    this.helpBlock = '';\n    this.emailValidationState = '';\n    this.displayNameValidationState = '';\n    this.passwordValidationState = '';\n  }\n\n  onSignupSuccess(successMessage) {\n    this.displayNameValidationState = 'has-success';\n    this.helpBlock = successMessage;\n  }\n\n  onSignupFail(errorMessage) {\n    this.displayNameValidationState = 'has-error';\n    this.helpBlock = errorMessage;\n  }\n\n  onUpdateEmail(event) {\n    this.email = event.target.value;\n    this.emailValidationState = '';\n    this.helpBlock = '';\n  }\n\n  onUpdateDisplayName(event) {\n    this.displayName = event.target.value;\n    this.displayNameValidationState = '';\n    this.helpBlock = '';\n  }\n\n  onUpdatePassword(event) {\n    this.password = event.target.value;\n    this.passwordValidationState = '';\n    this.helpBlock = '';\n  }\n\n  onUpdateEmail(event) {\n    this.email = event.target.value;\n    this.emailValidationState = '';\n    this.helpBlock = '';\n  }\n  onUpdateRsiHandle(event) {\n    this.rsiHandle = event.target.value;\n    this.rsiHandleValidationState = '';\n    this.helpBlock = '';\n  }\n\n  onInvalidEmail() {\n    this.emailValidationState = 'has-error';\n    this.helpBlock = 'Please enter an email.';\n  }\n\n  onInvalidDisplayName() {\n    this.displayNameValidationState = 'has-error';\n    this.helpBlock = 'Please enter a character name.';\n  }\n\n  onInvalidPassword() {\n    this.passwordValidationState = 'has-error';\n    this.helpBlock = 'Please enter a password.';\n  }\n}\n\nexport default alt.createStore(SignupStore);\n","import {assign} from 'underscore';\nimport alt from '../alt';\nimport StatsActions from '../actions/StatsActions';\n\nclass StatsStore {\n  constructor() {\n    this.bindActions(StatsActions);\n    this.leadingRace = { race: 'Unknown', count: 0 };\n    this.leadingBloodline = { bloodline: 'Unknown', count: 0 };\n    this.amarrCount = 0;\n    this.caldariCount = 0;\n    this.gallenteCount = 0;\n    this.minmatarCount = 0;\n    this.totalVotes = 0;\n    this.femaleCount = 0;\n    this.maleCount = 0;\n    this.totalCount = 0;\n  }\n\n  onGetStatsSuccess(data) {\n    assign(this, data);\n  }\n\n  onGetStatsFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(StatsStore);\n","import alt from '../alt';\nimport UserListActions from '../actions/UserListActions';\n\nclass UserListStore {\n  constructor() {\n    this.bindActions(UserListActions);\n    this.users = [];\n  }\n\n  onGetUsersSuccess(data) {\n    console.log(data);\n    this.users = data;\n  }\n\n  onGetUsersFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(UserListStore);\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","/**\n * Indicates that navigation was caused by a call to history.push.\n */\n'use strict';\n\nexports.__esModule = true;\nvar PUSH = 'PUSH';\n\nexports.PUSH = PUSH;\n/**\n * Indicates that navigation was caused by a call to history.replace.\n */\nvar REPLACE = 'REPLACE';\n\nexports.REPLACE = REPLACE;\n/**\n * Indicates that navigation was caused by some other action such\n * as using a browser's back/forward buttons and/or manually manipulating\n * the URL in a browser's location bar. This is the default.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\n * for more information.\n */\nvar POP = 'POP';\n\nexports.POP = POP;\nexports['default'] = {\n  PUSH: PUSH,\n  REPLACE: REPLACE,\n  POP: POP\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0;\n  var isDone = false;\n\n  function done() {\n    isDone = true;\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) return;\n\n    if (currentTurn < turns) {\n      work.call(this, currentTurn++, next, done);\n    } else {\n      done.apply(this, arguments);\n    }\n  }\n\n  next();\n}","/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededError = 'QuotaExceededError';\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.getHashPath = getHashPath;\nexports.replaceHashPath = replaceHashPath;\nexports.getWindowPath = getWindowPath;\nexports.go = go;\nexports.getUserConfirmation = getUserConfirmation;\nexports.supportsHistory = supportsHistory;\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\n\nfunction addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent('on' + event, listener);\n  }\n}\n\nfunction removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent('on' + event, listener);\n  }\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  return window.location.href.split('#')[1] || '';\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\n}\n\nfunction getWindowPath() {\n  return window.location.pathname + window.location.search + window.location.hash;\n}\n\nfunction go(n) {\n  if (n) window.history.go(n);\n}\n\nfunction getUserConfirmation(message, callback) {\n  callback(window.confirm(message));\n}\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  // FIXME: Work around our browser history not working correctly on Chrome\n  // iOS: https://github.com/rackt/react-router/issues/2565\n  if (ua.indexOf('CriOS') !== -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  var ua = navigator.userAgent;\n  return ua.indexOf('Firefox') === -1;\n}","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\n/**\n * Creates and returns a history object that uses HTML5's history API\n * (pushState, replaceState, and the popstate event) to manage history.\n * This is the recommended method of managing history in browsers because\n * it provides the cleanest URLs.\n *\n * Note: In browsers that do not support the HTML5 history API full\n * page reloads will be used to preserve URLs.\n */\nfunction createBrowserHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var forceRefresh = options.forceRefresh;\n\n  var isSupported = _DOMUtils.supportsHistory();\n  var useRefresh = !isSupported || forceRefresh;\n\n  function getCurrentLocation(historyState) {\n    historyState = historyState || window.history.state || {};\n\n    var path = _DOMUtils.getWindowPath();\n    var _historyState = historyState;\n    var key = _historyState.key;\n\n    var state = undefined;\n    if (key) {\n      state = _DOMStateStorage.readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\n    }\n\n    var location = _parsePath2['default'](path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startPopStateListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function popStateListener(event) {\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\n\n      transitionTo(getCurrentLocation(event.state));\n    }\n\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    _DOMStateStorage.saveState(key, state);\n\n    var path = (basename || '') + pathname + search + hash;\n    var historyState = {\n      key: key\n    };\n\n    if (action === _Actions.PUSH) {\n      if (useRefresh) {\n        window.location.href = path;\n        return false; // Prevent location update.\n      } else {\n          window.history.pushState(historyState, null, path);\n        }\n    } else {\n      // REPLACE\n      if (useRefresh) {\n        window.location.replace(path);\n        return false; // Prevent location update.\n      } else {\n          window.history.replaceState(historyState, null, path);\n        }\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopPopStateListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopPopStateListener();\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    registerTransitionHook: registerTransitionHook,\n    unregisterTransitionHook: unregisterTransitionHook\n  });\n}\n\nexports['default'] = createBrowserHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createDOMHistory(options) {\n  var history = _createHistory2['default'](_extends({\n    getUserConfirmation: _DOMUtils.getUserConfirmation\n  }, options, {\n    go: _DOMUtils.go\n  }));\n\n  function listen(listener) {\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n\n    return history.listen(listener);\n  }\n\n  return _extends({}, history, {\n    listen: listen\n  });\n}\n\nexports['default'] = createDOMHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction createRandomKey(length) {\n  return Math.random().toString(36).substr(2, length);\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search &&\n  //a.action === b.action && // Different action !== location change.\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\n}\n\nvar DefaultKeyLength = 6;\n\nfunction createHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var getCurrentLocation = options.getCurrentLocation;\n  var finishTransition = options.finishTransition;\n  var saveState = options.saveState;\n  var go = options.go;\n  var keyLength = options.keyLength;\n  var getUserConfirmation = options.getUserConfirmation;\n\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\n\n  var transitionHooks = [];\n\n  function listenBefore(hook) {\n    transitionHooks.push(hook);\n\n    return function () {\n      transitionHooks = transitionHooks.filter(function (item) {\n        return item !== hook;\n      });\n    };\n  }\n\n  var allKeys = [];\n  var changeListeners = [];\n  var location = undefined;\n\n  function getCurrent() {\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\n      return allKeys.indexOf(pendingLocation.key);\n    } else if (location) {\n      return allKeys.indexOf(location.key);\n    } else {\n      return -1;\n    }\n  }\n\n  function updateLocation(newLocation) {\n    var current = getCurrent();\n\n    location = newLocation;\n\n    if (location.action === _Actions.PUSH) {\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\n    } else if (location.action === _Actions.REPLACE) {\n      allKeys[current] = location.key;\n    }\n\n    changeListeners.forEach(function (listener) {\n      listener(location);\n    });\n  }\n\n  function listen(listener) {\n    changeListeners.push(listener);\n\n    if (location) {\n      listener(location);\n    } else {\n      var _location = getCurrentLocation();\n      allKeys = [_location.key];\n      updateLocation(_location);\n    }\n\n    return function () {\n      changeListeners = changeListeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function confirmTransitionTo(location, callback) {\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\n        if (result != null) {\n          done(result);\n        } else {\n          next();\n        }\n      });\n    }, function (message) {\n      if (getUserConfirmation && typeof message === 'string') {\n        getUserConfirmation(message, function (ok) {\n          callback(ok !== false);\n        });\n      } else {\n        callback(message !== false);\n      }\n    });\n  }\n\n  var pendingLocation = undefined;\n\n  function transitionTo(nextLocation) {\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\n\n    pendingLocation = nextLocation;\n\n    confirmTransitionTo(nextLocation, function (ok) {\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\n\n      if (ok) {\n        // treat PUSH to current path like REPLACE to be consistent with browsers\n        if (nextLocation.action === _Actions.PUSH) {\n          var prevPath = createPath(location);\n          var nextPath = createPath(nextLocation);\n\n          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;\n        }\n\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\n      } else if (location && nextLocation.action === _Actions.POP) {\n        var prevIndex = allKeys.indexOf(location.key);\n        var nextIndex = allKeys.indexOf(nextLocation.key);\n\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\n      }\n    });\n  }\n\n  function push(location) {\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\n  }\n\n  function replace(location) {\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function createKey() {\n    return createRandomKey(keyLength);\n  }\n\n  function createPath(location) {\n    if (location == null || typeof location === 'string') return location;\n\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n\n    var result = pathname;\n\n    if (search) result += search;\n\n    if (hash) result += hash;\n\n    return result;\n  }\n\n  function createHref(location) {\n    return createPath(location);\n  }\n\n  function createLocation(location, action) {\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\n\n    if (typeof action === 'object') {\n      //warning(\n      //  false,\n      //  'The state (2nd) argument to history.createLocation is deprecated; use a ' +\n      //  'location descriptor instead'\n      //)\n\n      if (typeof location === 'string') location = _parsePath2['default'](location);\n\n      location = _extends({}, location, { state: action });\n\n      action = key;\n      key = arguments[3] || createKey();\n    }\n\n    return _createLocation3['default'](location, action, key);\n  }\n\n  // deprecated\n  function setState(state) {\n    if (location) {\n      updateLocationState(location, state);\n      updateLocation(location);\n    } else {\n      updateLocationState(getCurrentLocation(), state);\n    }\n  }\n\n  function updateLocationState(location, state) {\n    location.state = _extends({}, location.state, state);\n    saveState(location.key, location.state);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    transitionHooks = transitionHooks.filter(function (item) {\n      return item !== hook;\n    });\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    push(_extends({ state: state }, path));\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    replace(_extends({ state: state }, path));\n  }\n\n  return {\n    listenBefore: listenBefore,\n    listen: listen,\n    transitionTo: transitionTo,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    createKey: createKey,\n    createPath: createPath,\n    createHref: createHref,\n    createLocation: createLocation,\n\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n  };\n}\n\nexports['default'] = createHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _Actions = require('./Actions');\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nfunction createLocation() {\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (typeof location === 'string') location = _parsePath2['default'](location);\n\n  if (typeof action === 'object') {\n    //warning(\n    //  false,\n    //  'The state (2nd) argument to createLocation is deprecated; use a ' +\n    //  'location descriptor instead'\n    //)\n\n    location = _extends({}, location, { state: action });\n\n    action = key || _Actions.POP;\n    key = _fourthArg;\n  }\n\n  var pathname = location.pathname || '/';\n  var search = location.search || '';\n  var hash = location.hash || '';\n  var state = location.state || null;\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash,\n    state: state,\n    action: action,\n    key: key\n  };\n}\n\nexports['default'] = createLocation;\nmodule.exports = exports['default'];","//import warning from 'warning'\n\n\"use strict\";\n\nexports.__esModule = true;\nfunction deprecate(fn) {\n  return fn;\n  //return function () {\n  //  warning(false, '[history] ' + message)\n  //  return fn.apply(this, arguments)\n  //}\n}\n\nexports[\"default\"] = deprecate;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nfunction extractPath(string) {\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\n\n  if (match == null) return string;\n\n  return string.substring(match[0].length);\n}\n\nexports[\"default\"] = extractPath;\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _extractPath = require('./extractPath');\n\nvar _extractPath2 = _interopRequireDefault(_extractPath);\n\nfunction parsePath(path) {\n  var pathname = _extractPath2['default'](path);\n  var search = '';\n  var hash = '';\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substring(hashIndex);\n    pathname = pathname.substring(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substring(searchIndex);\n    pathname = pathname.substring(0, searchIndex);\n  }\n\n  if (pathname === '') pathname = '/';\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash\n  };\n}\n\nexports['default'] = parsePath;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction runTransitionHook(hook, location, callback) {\n  var result = hook(location, callback);\n\n  if (hook.length < 2) {\n    // Assume the hook runs synchronously and automatically\n    // call the callback with the return value.\n    callback(result);\n  } else {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }\n}\n\nexports['default'] = runTransitionHook;\nmodule.exports = exports['default'];","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}